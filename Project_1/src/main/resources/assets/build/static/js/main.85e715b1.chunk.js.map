{"version":3,"sources":["Login.tsx","Tables.tsx","EmployeeHome.tsx","Logout.tsx","ManagerHome.tsx","Update.tsx","Employee.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LoginForm","message","useState","validLogin","setValidLogin","email","password","formData","setFormData","updateFormData","event","target","id","value","history","useHistory","submitForm","a","preventDefault","axios","get","then","response","status","undefined","data","localStorage","setItem","JSON","stringify","manager","push","console","log","Message","negative","Header","Fragment","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","as","color","Form","size","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","type","Button","onClick","tables","reimbursements","filter","reimbursement","pending","map","Table","Row","Cell","_id","money","date","approved","positive","Icon","name","striped","HeaderCell","Body","this","pendingTable","resolvedTable","Error","EmployeeHome","getItem","React","open","setOpen","setReimbursements","setPending","parse","loggedUser","setLoggedUser","employee","useEffect","headers","reimbursementResponse","userButton","post","array","toggleButton","width","firstName","lastName","toggle","active","Modal","closeIcon","trigger","labelPosition","primary","onClose","onOpen","position","content","Content","Tables","assembleReimbursementTable","LogoutForm","to","path","Login","ManagerHome","users","setUser","resolved","setActive","formBox","setFormBox","addUser","form","updateReimbursement","reId","put","userResponse","arrayTemp","viewUser","user","find","reimbursementRequest","updateResponse","removeOld","addBack","required","Checkbox","label","collapsing","basic","cells","Group","Or","UpdateForm","validUpdate","setValidUpdate","invalidUpdate","setInvalidUpdate","currentFields","setFields","goBack","error","info","defaultValue","Employee","useParams","employeeId","App","className","Menu","Item","header","exact","Logout","Update","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85e715b1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, Form, Grid, Header, Segment, Message } from 'semantic-ui-react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nconst LoginForm = () => {\r\n    const [validLogin, setValidLogin] = useState({\r\n        validLogin: true\r\n    });\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '', \r\n        password: '',\r\n    });\r\n\r\n    const updateFormData = (event: any) => {\r\n        if(event.target.id == 'email') {\r\n            setFormData({ email: event.target.value, password: formData.password});\r\n        } else {\r\n            setFormData({ email:formData.email, password: event.target.value});\r\n        }\r\n      };\r\n\r\n    const history = useHistory();\r\n\r\n    const submitForm = async (event: any) => {\r\n        event.preventDefault();\r\n        await axios\r\n        .get(\"http://localhost:8080/api/users/\" + formData.email)\r\n        .then((response) => {\r\n            switch(response.status) {\r\n                case 200:\r\n                    if(response.data[0].password == undefined) {\r\n                        setValidLogin({validLogin: false})\r\n                        break;\r\n                    }\r\n                    if(response.data[0].password !== formData.password) {\r\n                        setValidLogin({validLogin: false});\r\n                        break;\r\n                    }\r\n                    setValidLogin({validLogin: true});\r\n                    localStorage.setItem('user', JSON.stringify(response.data[0]));\r\n                    if(response.data[0].manager) {\r\n                        history.push('/ManagerHome'); //change\r\n                        break;\r\n                    }\r\n                    history.push('/EmployeeHome');\r\n                    break;\r\n                case 400:\r\n                    console.log(\"There was something wrong with the requested format\");\r\n                    break;\r\n                case 404:\r\n                    console.log(\"Not found\");\r\n                    break;\r\n                default:\r\n                    console.log(\"Something else happened\");\r\n            }\r\n        });\r\n    }\r\n    let message;\r\n    if(!validLogin.validLogin) {\r\n        message = <Message negative><Message.Header>Invalid Email or Password</Message.Header></Message>;\r\n    } else { message = '';}\r\n    return (\r\n    <React.Fragment>\r\n        <Grid textAlign='center' style={{ height: '75vh' }} verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n            <Header as='h2' color='black' textAlign='center'>\r\n                Log-in to your account\r\n            </Header>\r\n            {message}\r\n            <Form size='large'>\r\n                <Segment stacked>\r\n                <Form.Input id='email' fluid icon='user' iconPosition='left' placeholder='E-mail address' onChange={updateFormData}/>\r\n                <Form.Input id='password' fluid icon='lock' iconPosition='left' placeholder='Password' type='password' onChange={updateFormData}/>\r\n                <Button type='submit' onClick={submitForm} color='black' fluid size='large'>\r\n                    Login\r\n                </Button>\r\n                </Segment>\r\n            </Form>\r\n            </Grid.Column>\r\n        </Grid>\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default LoginForm","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport './App.css';\r\nimport {Table, Button, Icon, Grid, Header, Modal, Form, Segment} from 'semantic-ui-react'\r\nimport './Login';\r\nimport User from './User';\r\nimport Reimbursement from './Reimbursement';\r\nimport axios, {AxiosResponse} from 'axios';\r\n\r\nclass Tables {\r\n    static assembleReimbursementTable(reimbursements: Reimbursement[], pending: boolean) {\r\n      throw new Error('Method not implemented.');\r\n    }\r\n\r\n    resolvedTable(reimbursements: Reimbursement[]) {\r\n        return reimbursements.filter(reimbursement => reimbursement.pending == false)\r\n        .map((reimbursement) => (\r\n          <Table.Row>\r\n            <Table.Cell>{reimbursement._id}</Table.Cell>\r\n            <Table.Cell>${reimbursement.money}</Table.Cell>\r\n            <Table.Cell>{reimbursement.message}</Table.Cell>\r\n            <Table.Cell>{reimbursement.date}</Table.Cell>\r\n            {reimbursement.approved ? <Table.Cell positive><Icon name='checkmark' />Approved</Table.Cell> : \r\n                                      <Table.Cell negative><Icon name='close' />Denied</Table.Cell>\r\n            }\r\n            <Table.Cell>{reimbursement.manager}</Table.Cell>\r\n          </Table.Row>\r\n        ))\r\n    }\r\n    \r\n    pendingTable (reimbursements: Reimbursement[]) {\r\n        return reimbursements.filter(reimbursement => reimbursement.pending == true)\r\n        .map((reimbursement) => (\r\n          <Table.Row>\r\n            <Table.Cell>{reimbursement._id}</Table.Cell>\r\n            <Table.Cell>${reimbursement.money}</Table.Cell>\r\n            <Table.Cell>{reimbursement.message}</Table.Cell>\r\n            <Table.Cell>{reimbursement.date}</Table.Cell>\r\n          </Table.Row>\r\n        ))\r\n    }\r\n    \r\n    assembleReimbursementTable(reimbursements: Reimbursement[], pending: boolean) {\r\n        return (\r\n          <Table striped> \r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell>ID</Table.HeaderCell>\r\n                <Table.HeaderCell>Amount</Table.HeaderCell>\r\n                <Table.HeaderCell>Reason</Table.HeaderCell>\r\n                <Table.HeaderCell>Date</Table.HeaderCell>\r\n                {pending? null : <Table.HeaderCell>Approved</Table.HeaderCell>}\r\n                {pending? null : <Table.HeaderCell>Manager</Table.HeaderCell>}\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n            {pending ? this.pendingTable(reimbursements) : this.resolvedTable(reimbursements)}\r\n            </Table.Body>\r\n          </Table>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst tables = new Tables();\r\n\r\nexport default tables;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport './App.css';\r\nimport {Table, Button, Icon, Grid, Header, Modal, Form, Segment} from 'semantic-ui-react'\r\nimport './Login';\r\nimport User from './User';\r\nimport Reimbursement from './Reimbursement';\r\nimport axios, {AxiosResponse} from 'axios';\r\nimport Tables from './Tables';\r\n\r\nconst EmployeeHome = () => {\r\n\r\n  console.log(localStorage.getItem('user'))\r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  const [reimbursements, setReimbursements] = useState<Reimbursement[]>([]);\r\n  const [pending, setPending] = useState(false)\r\n\r\n  const history = useHistory();\r\n\r\n  if(localStorage.getItem('user') == '') {\r\n    history.push('./Login')\r\n  }\r\n  const [loggedUser, setLoggedUser] = useState<User>(JSON.parse(localStorage.getItem('user')!));\r\n  if(loggedUser.manager) {\r\n    history.push('./ManagerHome');\r\n  }\r\n  const [formData, setFormData] = useState({\r\n    employee: loggedUser._id,\r\n    money: '',\r\n    message: '',\r\n    date: '',\r\n  })\r\n  \r\n  const getReimbursements = (): Promise<AxiosResponse<Reimbursement[]>> => {\r\n    return axios.get(\"http://localhost:8080/api/reimbursements/\" + loggedUser._id, {headers: { 'Content-Type': 'application/json'}});\r\n  }\r\n\r\n  const addReimbursement = (): Promise<AxiosResponse<Reimbursement>> => {\r\n    return axios.post(\"http://localhost:8080/api/reimbursements/add\", formData, {headers: {'Content-Type': 'application/json'}})\r\n  }\r\n\r\n  //use set contact in the useeffect\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem('user')!));\r\n    (async () => {\r\n      const reimbursementResponse = await getReimbursements();\r\n      setReimbursements(reimbursementResponse.data);\r\n    })()\r\n  }, []);\r\n\r\n  const userButton = async (event : any) => {\r\n    setOpen(false);\r\n    event.preventDefault();\r\n    if(formData.money == '' || formData.date == '') {\r\n      return;\r\n    }\r\n    const reimbursementResponse = await addReimbursement();\r\n    console.log(reimbursementResponse.data)\r\n    const array = [...reimbursements, reimbursementResponse.data];\r\n    setReimbursements(array);\r\n  }\r\n\r\n  const toggleButton = (event : any) => {\r\n    setPending(!pending);\r\n  }\r\n\r\n  const updateFormData = (event: any) => {\r\n    switch(event.target.id) {\r\n      case 'money':\r\n        setFormData({ ...formData, money: event.target.value });\r\n        break;\r\n      case 'message':\r\n        setFormData({ ...formData, message: event.target.value });\r\n        break;\r\n      case 'date':\r\n        setFormData({ ...formData, date: event.target.value });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const modal = () => {\r\n    return (<Modal\r\n      closeIcon\r\n      open={open}\r\n      trigger={<Button\r\n        icon\r\n        labelPosition='left'\r\n        primary\r\n        >\r\n      <Icon name='edit' />Add Reimbursement</Button>}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      >\r\n      <Header icon='edit' position='center' content='Add a new Reimbursement' />\r\n      <Modal.Content>\r\n        <Form size='large'>\r\n          <Segment stacked>\r\n            <Form.Input id='money' fluid icon='dollar sign' iconPosition='left' placeholder=\"Amount($)\" onChange={updateFormData}/>\r\n            <Form.Input id='message' fluid icon='comment' iconPosition='left' placeholder=\"Reason\" onChange={updateFormData}/>\r\n            <Form.Input id='date' fluid icon='calendar outline' iconPosition='left' placeholder=\"mm/dd/yyyy\" onChange={updateFormData}/>\r\n            <Button color='green' type='submit' onClick={userButton} fluid size='large'>\r\n              <Icon name='checkmark' />\r\n              Add Reimbursement\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>)\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <React.Fragment>\r\n      <Grid textAlign='center' style={{ height: '75vh' }} verticalAlign='middle'>\r\n          <Grid.Column style={{ width: '90%' }}>\r\n          <Header>Welcome {loggedUser.firstName} {loggedUser.lastName}</Header>\r\n          <Segment>\r\n          <Grid>\r\n            <Grid.Column width=\"9\">\r\n              <Button id='pending' toggle active={pending} onClick={toggleButton}>\r\n                Pending\r\n              </Button>\r\n              <Button id='resolved' toggle active={!pending} onClick={toggleButton}>\r\n                Resolved\r\n              </Button>\r\n          </Grid.Column>\r\n          <Grid.Column width=\"7\">\r\n          {modal()}\r\n          </Grid.Column>\r\n          </Grid>\r\n          </Segment>\r\n          { Tables.assembleReimbursementTable(reimbursements, pending)}\r\n          </Grid.Column>\r\n      </Grid>\r\n  </React.Fragment>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeHome;","import React from 'react'\r\nimport { Grid, Header, Segment } from 'semantic-ui-react'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\nimport LoginForm from './Login';\r\n\r\nconst LogoutForm = () => {\r\n    \r\n    localStorage.setItem('user', '');\r\n\r\n    return (\r\n    <React.Fragment>\r\n        <Grid textAlign='center' style={{ height: '75vh' }} verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n            <Header as='h2' color='black' textAlign='center'>\r\n                You are now logged out.\r\n            </Header>\r\n            <Segment>\r\n                <span>\r\n                    <Link to=\"/Login\">Login</Link>\r\n                </span>\r\n                <Route path='/Login'>\r\n                    <LoginForm />\r\n                </Route>\r\n            </Segment>\r\n            </Grid.Column>\r\n        </Grid>\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default LogoutForm","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport './App.css';\r\nimport { Table, Button, Icon, Grid, Header, Modal, Form, Segment} from 'semantic-ui-react'\r\nimport './Login';\r\nimport User from './User';\r\nimport Reimbursement from './Reimbursement';\r\nimport axios, {AxiosResponse} from 'axios';\r\n\r\nconst ManagerHome = () => {\r\n\r\n  console.log(localStorage.getItem('user'))\r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  const [users, setUser] = useState<User[]>([]);\r\n  const [reimbursements, setReimbursements] = useState<Reimbursement[]>([]);\r\n  const [active, setActive] = useState({\r\n    employee: true,\r\n    pending: false,\r\n    resolved: false\r\n  })\r\n  const [formBox, setFormBox] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  })\r\n  const history = useHistory();\r\n  if(localStorage.getItem('user') == '') {\r\n      history.push('./Login')\r\n  }\r\n  const [loggedUser, setLoggedUser] = useState<User>(JSON.parse(localStorage.getItem('user')!));\r\n  if(!loggedUser.manager) {\r\n    history.push('./EmployeeHome');\r\n  }\r\n\r\n  const getUsers = (): Promise<AxiosResponse<User[]>> => { \r\n    return  axios.get(\"http://localhost:8080/api/users/\", {headers: { 'Content-Type': 'application/json'}});\r\n  }\r\n\r\n  const addUser = (): Promise<AxiosResponse<User>> => {\r\n    const form = {\r\n      email: formData.email,\r\n      password: formData.password,\r\n      firstName: formData.firstName,\r\n      lastName: formData.lastName,\r\n      manager: formBox\r\n    }\r\n    return axios.post(\"http://localhost:8080/api/users/add/\", form, {headers: { 'Content-Type': 'application/json'}})\r\n  }\r\n  \r\n  const getReimbursements = (): Promise<AxiosResponse<Reimbursement[]>> => {\r\n    return axios.get(\"http://localhost:8080/api/reimbursements\", {headers: { 'Content-Type': 'application/json'}});\r\n  }\r\n\r\n  const updateReimbursement = (reId : string, resolved : boolean): Promise<AxiosResponse<Reimbursement>> => {\r\n    const form = {\r\n      _id: reId,\r\n      approved: resolved,\r\n      manager: ((loggedUser.firstName) + ' ' + (loggedUser.lastName))\r\n    }\r\n    return axios.put(\"http://localhost:8080/api/reimbursements/update\", form, {headers: {'Content-Type': 'application/json'}})\r\n  }\r\n\r\n  const userButton = async (event : any) => {\r\n    if(formData.email == '' || formData.password == '' || formData.firstName == '' || formData.lastName == '') {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    const userResponse = await addUser();\r\n    setFormBox(false);\r\n    const arrayTemp = [...users, userResponse.data];\r\n    setUser(arrayTemp);\r\n  }\r\n\r\n  const viewUser = async (event : any) => {\r\n    event.preventDefault();\r\n    const user = users.find(user => user._id == event.target.value)\r\n    history.push('/employee/' + user?._id + '/' + user?.lastName + '/' + user?.firstName)\r\n  }\r\n\r\n  const reimbursementRequest = async (event : any) => {\r\n    event.preventDefault();\r\n    if(event.target.id == 'approve') {\r\n      const updateResponse = await updateReimbursement(event.target.value, true);\r\n      console.log(updateResponse)\r\n      const removeOld = reimbursements.filter((reimbursement) => reimbursement._id != updateResponse.data._id)\r\n      const addBack = [...removeOld, updateResponse.data]\r\n      setReimbursements(addBack)\r\n    } else {\r\n      const updateResponse = await updateReimbursement(event.target.value, false);\r\n      console.log(updateResponse)\r\n      console.log(reimbursements)\r\n      const removeOld = reimbursements.filter((reimbursement) => reimbursement._id != updateResponse.data._id)\r\n      console.log(removeOld)\r\n      const addBack = [...removeOld, updateResponse.data]\r\n      console.log(updateResponse.data)\r\n      console.log(reimbursements)\r\n      setReimbursements(addBack)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem('user')!));\r\n    (async () => {\r\n      const userResponse = await getUsers();\r\n      const reimbursementResponse = await getReimbursements();\r\n      setUser(userResponse.data);\r\n      setReimbursements(reimbursementResponse.data);\r\n    })()\r\n  }, []);\r\n\r\n  const toggleButton = (event : any) => {\r\n    switch(event.target.id) {\r\n      case 'employee':\r\n        setActive({employee: true, pending: false, resolved: false,})\r\n        break;\r\n      case 'pending':\r\n        setActive({employee: false, pending: true, resolved: false,})\r\n        break;\r\n      case 'resolved':\r\n        setActive({employee: false, pending: false, resolved: true,})\r\n        break;\r\n      case 'manager':\r\n        setFormBox(!formBox)\r\n        break;\r\n    }\r\n  }\r\n\r\n  const updateFormData = (event: any) => {\r\n    switch(event.target.id) {\r\n      case 'email':\r\n        setFormData({ ...formData, email: event.target.value });\r\n        break;\r\n      case 'password':\r\n        setFormData({ ...formData, password: event.target.value });\r\n        break;\r\n      case 'firstName':\r\n        setFormData({ ...formData, firstName: event.target.value });\r\n        break;\r\n      case 'lastName':\r\n        setFormData({ ...formData, lastName: event.target.value });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const modal = () => {\r\n    return (<Modal\r\n      closeIcon\r\n      open={open}\r\n      trigger={<Button\r\n        icon\r\n        labelPosition='left'\r\n        primary\r\n        >\r\n      <Icon name='user' />Add User</Button>}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      >\r\n      <Header icon='address book' position='center' content='Add a new User' />\r\n      <Modal.Content>\r\n        <Form size='large'>\r\n          <Segment stacked>\r\n            <Form.Input id='email' fluid icon='at' iconPosition='left' placeholder=\"Email address\" onChange={updateFormData} required/>\r\n            <Form.Input id='password' fluid icon='lock' iconPosition='left' placeholder=\"Password\" onChange={updateFormData} required/>\r\n            <Form.Input id='firstName' fluid icon='user' iconPosition='left' placeholder=\"First name\" onChange={updateFormData} required/>\r\n            <Form.Input id='lastName' fluid icon='user' iconPosition='left' placeholder=\"Last name\" onChange={updateFormData} required/>\r\n            <Form.Checkbox id='manager' fluid icon='certificate' iconPosition='left'  label=\"Are they a manager?\" onChange={toggleButton}/>\r\n            <Button color='green' type='submit' onClick={userButton} fluid size='large'>\r\n              <Icon name='checkmark' />\r\n              Add User\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n      </Modal.Content>\r\n    </Modal>)\r\n  }\r\n\r\n  //add a toggle for the three main buttons\r\n\r\n  const resolvedTable = () => {\r\n    return reimbursements.filter(reimbursement => reimbursement.pending == false)\r\n    //add user\r\n    .map((reimbursement) => (\r\n      <Table.Row>\r\n        <Table.Cell>{reimbursement._id}</Table.Cell>\r\n        <Table.Cell>\r\n          {users.find(user => user._id == reimbursement.employee)?.firstName} {\" \"} \r\n          {users.find(user => user._id == reimbursement.employee)?.lastName}\r\n        </Table.Cell>\r\n        <Table.Cell>${reimbursement.money}</Table.Cell>\r\n        <Table.Cell>{reimbursement.message}</Table.Cell>\r\n        <Table.Cell>{reimbursement.date}</Table.Cell>\r\n        {reimbursement.approved ? <Table.Cell positive><Icon name='checkmark' />Approved</Table.Cell> : \r\n                                  <Table.Cell negative><Icon name='close' />Denied</Table.Cell>\r\n        }\r\n        <Table.Cell>{reimbursement.manager}</Table.Cell>\r\n      </Table.Row>\r\n    ))\r\n  }\r\n\r\n  const pendingTable = () => {\r\n    return reimbursements.filter(reimbursement => reimbursement.pending == true)\r\n    .map((reimbursement) => (\r\n      <Table.Row>\r\n        <Table.Cell>{reimbursement._id}</Table.Cell>\r\n        <Table.Cell>\r\n          {users.find(user => user._id == reimbursement.employee)?.firstName} {\" \"}\r\n          {users.find(user => user._id == reimbursement.employee)?.lastName}\r\n        </Table.Cell>\r\n        <Table.Cell>${reimbursement.money}</Table.Cell>\r\n        <Table.Cell>{reimbursement.message}</Table.Cell>\r\n        <Table.Cell>{reimbursement.date}</Table.Cell>\r\n        <Button.Group>\r\n          <Button id='deny' value={reimbursement._id} negative type ='submit' onClick={reimbursementRequest}>Deny</Button>\r\n          <Button.Or />\r\n          <Button id='approve' value={reimbursement._id} positive type='submit' onClick={reimbursementRequest}>Approve</Button>\r\n        </Button.Group>\r\n      </Table.Row>\r\n    ))\r\n  }\r\n\r\n  const userTable = () => {\r\n    return users.filter(user => !user.manager).map((user) => (\r\n      <Table.Row>\r\n      <Table.Cell>{user._id}</Table.Cell>\r\n      <Table.Cell>{user.firstName} {user.lastName}</Table.Cell>\r\n      <Table.Cell>{user.email}</Table.Cell>\r\n      <Table.Cell collapsing>\r\n      <Button type='submit' value={user._id} onClick={viewUser} basic color='black'>\r\n          Requests\r\n      </Button>\r\n      </Table.Cell>\r\n    </Table.Row>\r\n      ))\r\n  }\r\n\r\n  const assembleReimbursementTable = () => {\r\n    let cells = (\r\n      <Table.HeaderCell>Deny / Approve</Table.HeaderCell>\r\n    )\r\n    let manager;\r\n    if(active.resolved) {\r\n      cells = <Table.HeaderCell>Approved</Table.HeaderCell>\r\n      manager = <Table.HeaderCell>Manager</Table.HeaderCell>\r\n    }\r\n    return (\r\n      <Table striped> \r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>ID</Table.HeaderCell>\r\n            <Table.HeaderCell>Employee</Table.HeaderCell>\r\n            <Table.HeaderCell>Amount</Table.HeaderCell>\r\n            <Table.HeaderCell>Reason</Table.HeaderCell>\r\n            <Table.HeaderCell>Date</Table.HeaderCell>\r\n            {cells}\r\n            {manager}\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n        {active.pending ? pendingTable() : resolvedTable()}\r\n        </Table.Body>\r\n      </Table>\r\n      )\r\n    }\r\n\r\n  const assembleUserTable = () => {\r\n    return (\r\n      <Table striped>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>ID</Table.HeaderCell>\r\n          <Table.HeaderCell>Name</Table.HeaderCell>\r\n          <Table.HeaderCell>E-mail address</Table.HeaderCell>\r\n          <Table.HeaderCell width='2'>See Requests</Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n\r\n      <Table.Body>\r\n\r\n      {userTable()}\r\n      </Table.Body>\r\n    </Table>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <React.Fragment>\r\n      <Grid textAlign='center' style={{ height: '75vh' }} verticalAlign='middle'>\r\n          <Grid.Column style={{ width: '90%' }}>\r\n          <Header>Welcome {loggedUser.firstName} {loggedUser.lastName}</Header>\r\n          <Segment>\r\n          <Grid>\r\n            <Grid.Column width=\"9\">\r\n              <Button id='employee' toggle active={active.employee} onClick={toggleButton}>\r\n                Employees\r\n              </Button>\r\n              <Button id='pending' toggle active={active.pending} onClick={toggleButton}>\r\n                Pending\r\n              </Button>\r\n              <Button id='resolved' toggle active={active.resolved} onClick={toggleButton}>\r\n                Resolved\r\n              </Button>\r\n          </Grid.Column>\r\n          <Grid.Column width=\"7\">\r\n          {modal()}\r\n          </Grid.Column>\r\n          </Grid>\r\n          </Segment>\r\n          {/* {assembleUserTable()} */}\r\n          {active.employee ? assembleUserTable() : assembleReimbursementTable()}\r\n          </Grid.Column>\r\n      </Grid>\r\n  </React.Fragment>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default ManagerHome;","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button, Form, Grid, Header, Segment, Message } from 'semantic-ui-react'\r\nimport axios from 'axios'\r\nimport User from './User'\r\n\r\nconst UpdateForm = () => {\r\n\r\n    const history = useHistory();\r\n    const [validUpdate, setValidUpdate] = useState(false)\r\n    const [invalidUpdate, setInvalidUpdate] = useState(false)\r\n    if(localStorage.getItem('user') == '') {\r\n        history.push('./Login')\r\n    }\r\n    const [currentFields, setFields] = useState<User>(JSON.parse(localStorage.getItem('user')!));\r\n\r\n    const updateFormData = (event: any) => {\r\n        switch(event.target.id) {\r\n            case 'email':\r\n                setFields({ ...currentFields, email: event.target.value });\r\n                break;\r\n            case 'password':\r\n                setFields({ ...currentFields, password: event.target.value });\r\n                break;\r\n            case 'firstName':\r\n                setFields({ ...currentFields, firstName: event.target.value });\r\n                break;\r\n            case 'lastName':\r\n                setFields({ ...currentFields, lastName: event.target.value });\r\n                break;\r\n        }\r\n    };\r\n\r\n    const submitForm = async (event: any) => {\r\n        event.preventDefault();\r\n        setInvalidUpdate(false);\r\n        setValidUpdate(false);\r\n        if(currentFields.email == '' || currentFields.password == '' || currentFields.firstName == '' || currentFields.lastName == ''){\r\n            setInvalidUpdate(true);\r\n            return;\r\n        }\r\n        await axios\r\n        .put(\"http://localhost:8080/api/users/update/\", currentFields, {\r\n            headers: { 'Content-Type': 'application/json'},\r\n        })\r\n        .then((response) => {\r\n            switch(response.status) {\r\n                case 201:\r\n                    setValidUpdate(true);\r\n                    localStorage.setItem('user', JSON.stringify(currentFields));\r\n                    history.goBack();\r\n                    break;\r\n                case 400:\r\n                    console.log(\"There was something wrong with the requested format\");\r\n                    break;\r\n                case 403:\r\n                    setInvalidUpdate(true);\r\n                    console.log(\"Not found\");\r\n                    break;\r\n                case 404:\r\n                    console.log(\"Not found\");\r\n                    break;\r\n                default:\r\n                    console.log(\"Something else happened\");\r\n            }\r\n        });\r\n    }\r\n\r\n    let message;\r\n    if(invalidUpdate) {\r\n        message = <Message error><Message.Header>Invalid Input</Message.Header></Message>\r\n    }\r\n    if(validUpdate) {\r\n        message = <Message info><Message.Header>Information Updated!</Message.Header></Message>\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid textAlign='center' style={{ height: '75vh' }} verticalAlign='middle'>\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                <Header as='h2' color='black' textAlign='center'>\r\n                    Update your Information:\r\n                </Header>\r\n                {message}\r\n                <Form size='large'>\r\n                    <Segment stacked>\r\n                    <Form.Input id='email' fluid icon='at' iconPosition='left' defaultValue={currentFields.email} onChange={updateFormData}/>\r\n                    <Form.Input id='password' fluid icon='lock' iconPosition='left' defaultValue={currentFields.password} onChange={updateFormData}/>\r\n                    <Form.Input id='firstName' fluid icon='user' iconPosition='left' defaultValue={currentFields.firstName} onChange={updateFormData}/>\r\n                    <Form.Input id='lastName' fluid icon='user' iconPosition='left' defaultValue={currentFields.lastName} onChange={updateFormData}/>\r\n                    <Button type='submit' onClick={submitForm} color='black' fluid size='large'>\r\n                        Update Info\r\n                    </Button>\r\n                    </Segment>\r\n                </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateForm;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport './App.css';\r\nimport { Table, Button, Icon, Grid, Header, Segment} from 'semantic-ui-react'\r\nimport './Login';\r\nimport User from './User';\r\nimport Reimbursement from './Reimbursement';\r\nimport axios, {AxiosResponse} from 'axios';\r\nimport Tables from './Tables';\r\n\r\nconst Employee = () => {\r\n  console.log(useParams())\r\n\r\n  //@ts-ignore\r\n  const { employeeId } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [reimbursements, setReimbursements] = useState<Reimbursement[]>([]);\r\n  const [pending, setPending] = useState(false)\r\n\r\n  if(localStorage.getItem('user') == '') {\r\n    history.push('./Login')\r\n  }\r\n  const [loggedUser, setLoggedUser] = useState<User>(JSON.parse(localStorage.getItem('user')!));\r\n  if(!loggedUser.manager) {\r\n    history.push('./EmployeeHome');\r\n  }\r\n  \r\n  const getReimbursements = (): Promise<AxiosResponse<Reimbursement[]>> => {\r\n    return axios.get(\"http://localhost:8080/api/reimbursements/\" + employeeId, {headers: { 'Content-Type': 'application/json'}});\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem('user')!));\r\n    (async () => {\r\n      const reimbursementResponse = await getReimbursements();\r\n      setReimbursements(reimbursementResponse.data);\r\n    })()\r\n  }, []);\r\n\r\n  const toggleButton = (event : any) => {\r\n    setPending(!pending);\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <React.Fragment>\r\n      <Grid textAlign='center' style={{ height: '75vh' }} verticalAlign='middle'>\r\n          <Grid.Column style={{ width: '90%' }}>\r\n          <Header>Welcome {loggedUser.firstName} {loggedUser.lastName}</Header>\r\n          <Header></Header>\r\n          <Segment>\r\n          <Grid>\r\n            <Grid.Column width=\"9\">\r\n              <Button id='pending' toggle active={pending} onClick={toggleButton}>\r\n                Pending\r\n              </Button>\r\n              <Button id='resolved' toggle active={!pending} onClick={toggleButton}>\r\n                Resolved\r\n              </Button>\r\n          </Grid.Column>\r\n          <Grid.Column width=\"7\">\r\n              <Button id='back' onClick={history.goBack} content='Back'/>\r\n          </Grid.Column>\r\n          </Grid>\r\n          </Segment>\r\n          {Tables.assembleReimbursementTable(reimbursements, pending)}\r\n          </Grid.Column>\r\n      </Grid>\r\n  </React.Fragment>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Employee;","import {useState, useEffect} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport { Menu } from 'semantic-ui-react'\nimport User from './User';\n\nimport LoginForm from './Login';\nimport EmployeeHome from './EmployeeHome';\nimport Logout from './Logout';\nimport ManagerHome from './ManagerHome';\nimport Update from './Update';\nimport Employee from './Employee';\n\nfunction App() {\n\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    if(localStorage.getItem('user') != '') {\n      setUser(JSON.parse(localStorage.getItem('user')!));\n    }\n  }, []);\n\n  console.log(localStorage.getItem('user'))\n\n  const home = () => {\n  if(user ? user.manager : false) {\n    return (<Menu.Item>\n              <Link to=\"/ManagerHome\">Home</Link>\n            </Menu.Item>)\n  }\n    return (<Menu.Item>\n          <Link to=\"/EmployeeHome\">Home</Link>\n          </Menu.Item>)\n  }\n \n  return (\n    <div className=\"App\">\n      <Router>\n        <nav className=\"Nav\">\n        <Menu>\n        <Menu.Item header>\n          Pawnee Civil Reimbursement\n        </Menu.Item>\n        {home()}\n        <Menu.Item position='right'>\n            {user ? <Link to=\"/Update\">Update</Link> : ''}\n        </ Menu.Item>\n        <Menu.Item>\n            {user ? <Link to=\"/Logout\">Logout</Link> : <Link to=\"/Login\">Login</Link>}\n        </Menu.Item>\n        </Menu>\n        </nav>\n        <Switch>\n          <Route path=\"/\" exact>\n            {user ? user.manager ? <ManagerHome /> : <EmployeeHome /> : <LoginForm />}\n          </Route>\n          <Route path='/Login'>\n            <LoginForm />\n          </Route>\n          <Route path='/Logout'>\n            <Logout />\n          </Route>\n          <Route path='/EmployeeHome'>\n            <EmployeeHome />\n          </Route>\n          <Route path='/ManagerHome'>\n            <ManagerHome />\n          </Route>\n          <Route path='/Update'>\n            <Update />\n          </Route>\n          <Route path={`/employee/:employeeId/:lastName/:firstName`} component={Employee} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}